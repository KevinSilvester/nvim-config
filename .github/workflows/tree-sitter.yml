name: tree-sitter

on:
  push:
    branches: ["lazy"]
  pull_request:
    branches: ["lazy"]

jobs:
  compile:
    name: Compile Parsers
    if: startsWith(github.event.head_commit.message, 'chore(release)') || startsWith(github.event.head_commit.message, 'ci(treesitter)')
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          [
            "x86_64-windows",
            "x86_64-linux",
            "aarch64-linux",
            "x86_64-macos",
            "aarch64-macos",
          ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2

      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8

      - name: Install Neovim
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: v0.9.2

      - name: Set pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install script deps
        shell: bash
        run: |
          pnpm add -g tree-sitter-cli

      - name: Setup Neovim
        shell: bash
        run: |
          bash ./scripts/reset.sh && rm -rf ~/.config/nvim
          mkdir -p ~/.config/nvim && cp -r ./* ~/.config/nvim

      - name: Setup Neovim cache
        id: cache-nvim
        uses: actions/cache@v3
        with:
          path: |
            ~/.local/share/nvim
            ~/.local/state/nvim
            ~/.cache/nvim
          key: ${{ runner.os }}-nvim-${{ hashFiles('lazy-lock.personal.json','lazy-lock.work.json') }}

      - name: Install Neovim plugins
        if: steps.nvim-cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          cd ~/.config/nvim && pwd
          nvim --headless -c 'Lazy restore' -c 'q'

      - name: Build Rust binaries
        shell: bash
        run: |
          cd ~/.config/nvim/scripts/nvim-utils
          ./build.sh

      - name: Compile Parsers
        shell: bash
        timeout-minutes: 30
        run: |
          ~/.config/nvim/scripts/bin/ts-parsers compile -t "${{ matrix.target }}"

      - name: Archive Parsers (Linux + Mac)
        if: ${{ matrix.target != 'x86_64-windows' }}
        shell: bash
        run: |
          name="treesitter-${{ matrix.target }}"
          mv "/tmp/ts-parsers-dist/${name}" ./treesitter
          tar -cvf "${name}.tar" ./treesitter
          cat "${name}.tar" | gzip --best > "${name}.tar.gz"
          rm -r ./treesitter "${name}.tar"

      - name: Archive Parsers (Windows)
        if: ${{ matrix.target == 'x86_64-windows' }}
        shell: bash
        run: |
          name="treesitter-${{ matrix.target }}"
          mv "/tmp/ts-parsers-dist/${name}" ./treesitter
          7z a "${name}.zip" ./treesitter
          rm -r ./treesitter

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: treesitter-${{ matrix.target }}
          path: |
            *.tar.gz
            *.zip

      - name: Set Release Name
        id: set_release
        run: |
          project_sha=$(git rev-parse --short HEAD)
          nvim_treesitter_sha=$(jq -r '."nvim-treesitter".commit' ./lazy-lock.personal.json)
          echo "project_sha=$project_sha" >> $GITHUB_OUTPUT
          echo "nvim_treesitter_sha=$nvim_treesitter_sha" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          files: |
            *.tar.gz
            *.zip
          name: nvim-treesitter-${{ steps.set_release.outputs.nvim_treesitter_sha }}-${{ steps.set_release.outputs.project_sha }}
          tag_name: nvim-treesitter-${{ steps.set_release.outputs.nvim_treesitter_sha }}-${{ steps.set_release.outputs.project_sha }}
          generate_release_notes: true
